# foilum map overlay
# overlaying B1 band from extracted files over Folium map

import os
import folium
import rasterio
from folium.raster_layers import ImageOverlay
from matplotlib import pyplot as plt
from matplotlib.colors import Normalize
import numpy as np

# Path to the downloaded image tile
image_path = '/content/extracted_files/LC09_L1TP_146040_20230602_20230602_02_T1_B1.TIF'

# Open the image tile using rasterio
with rasterio.open(image_path) as src:
    image_array = src.read(1)  # Read the first band
    bounds = src.bounds  # Get the bounds of the image
    crs = src.crs  # Get the coordinate reference system

# Normalize the image for better visualization
norm = Normalize(vmin=np.min(image_array), vmax=np.max(image_array))
image_array_normalized = norm(image_array)

# Ensure the directory exists
os.makedirs('/content', exist_ok=True)

# Save the normalized image as a PNG
output_path = '/content/image_overlay.png'
plt.imsave(output_path, image_array_normalized, cmap='gray')

# Check if the file was saved successfully
if os.path.exists(output_path):
    print(f"File saved successfully at {output_path}.")
else:
    print(f"File not found at {output_path}.")

# Unpack the bounds tuple
left, bottom, right, top = bounds

# Check if the CRS is EPSG:4326, otherwise reproject the bounds
if crs.to_string() != 'EPSG:4326':
    from rasterio.warp import transform_bounds
    left, bottom, right, top = transform_bounds(crs, 'EPSG:4326', left, bottom, right, top)

# Calculate the center of the image bounds
center_lat = (top + bottom) / 2
center_lon = (left + right) / 2

# Create a Folium map centered at the calculated center of the image
m = folium.Map(location=[center_lat, center_lon], zoom_start=6)

# Overlay the image tile on the folium map using the saved PNG
image_overlay = ImageOverlay(
    name='Image Overlay',
    image=output_path,
    bounds=[[bottom, left], [top, right]],
    opacity=0.9
)
image_overlay.add_to(m)

# Add layer control to toggle the image overlay
folium.LayerControl().add_to(m)

# Display the map
m
